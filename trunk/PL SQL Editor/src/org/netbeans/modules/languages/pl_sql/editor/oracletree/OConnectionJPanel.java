/*
 * OConnectionJPanel.java
 *
 * Created on 4. Juni 2008, 17:32
 */
package org.netbeans.modules.languages.pl_sql.editor.oracletree;

import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.HelpCtx;

/**
 *
 * @author  SUMsoft
 */
public class OConnectionJPanel extends javax.swing.JPanel {

    /** Creates new form OConnectionJPanel */
    public OConnectionJPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ServerNamejLabel = new javax.swing.JLabel();
        ServerNamejTextField = new javax.swing.JTextField();
        PortjLabel = new javax.swing.JLabel();
        PortjTextField = new javax.swing.JTextField();
        DatabaseNamejLabel = new javax.swing.JLabel();
        DatabseNamejTextField = new javax.swing.JTextField();
        UserjPanel = new javax.swing.JPanel();
        PasswordjLabel = new javax.swing.JLabel();
        PasswordjTextField = new javax.swing.JTextField();
        UserNamejLabel = new javax.swing.JLabel();
        UserNamejTextField = new javax.swing.JTextField();
        SavePasswordjCheckBox = new javax.swing.JCheckBox();
        ConnectAsjLabel = new javax.swing.JLabel();
        ConnectAsjComboBox = new javax.swing.JComboBox();

        ServerNamejLabel.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.ServerNamejLabel.text")); // NOI18N

        ServerNamejTextField.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.ServerNamejTextField.text")); // NOI18N

        PortjLabel.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.PortjLabel.text")); // NOI18N

        PortjTextField.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.PortjTextField.text")); // NOI18N

        DatabaseNamejLabel.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.DatabaseNamejLabel.text")); // NOI18N

        DatabseNamejTextField.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.DatabseNamejTextField.text")); // NOI18N

        UserjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.UserjPanel.border.title"))); // NOI18N

        PasswordjLabel.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.PasswordjLabel.text")); // NOI18N

        PasswordjTextField.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.PasswordjTextField.text")); // NOI18N

        UserNamejLabel.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.UserNamejLabel.text")); // NOI18N

        UserNamejTextField.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.UserNamejTextField.text")); // NOI18N

        SavePasswordjCheckBox.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.SavePasswordjCheckBox.text")); // NOI18N

        ConnectAsjLabel.setText(org.openide.util.NbBundle.getMessage(OConnectionJPanel.class, "OConnectionJPanel.ConnectAsjLabel.text")); // NOI18N

        ConnectAsjComboBox.setModel(new javax.swing.DefaultComboBoxModel( RoleTypes.values()));

        org.jdesktop.layout.GroupLayout UserjPanelLayout = new org.jdesktop.layout.GroupLayout(UserjPanel);
        UserjPanel.setLayout(UserjPanelLayout);
        UserjPanelLayout.setHorizontalGroup(
            UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, UserjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(SavePasswordjCheckBox)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, UserjPanelLayout.createSequentialGroup()
                        .add(UserNamejLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(UserNamejTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, UserjPanelLayout.createSequentialGroup()
                        .add(UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(PasswordjLabel)
                            .add(ConnectAsjLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(ConnectAsjComboBox, 0, 173, Short.MAX_VALUE)
                            .add(PasswordjTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))))
                .addContainerGap())
        );
        UserjPanelLayout.setVerticalGroup(
            UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(UserjPanelLayout.createSequentialGroup()
                .add(UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(UserNamejLabel)
                    .add(UserNamejTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(SavePasswordjCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(PasswordjLabel)
                    .add(PasswordjTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(UserjPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ConnectAsjLabel)
                    .add(ConnectAsjComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(UserjPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(DatabaseNamejLabel)
                            .add(ServerNamejLabel)
                            .add(PortjLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ServerNamejTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, PortjTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .add(DatabseNamejTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ServerNamejLabel)
                    .add(ServerNamejTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(PortjLabel)
                    .add(PortjTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(DatabaseNamejLabel)
                    .add(DatabseNamejTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(UserjPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ConnectAsjComboBox;
    private javax.swing.JLabel ConnectAsjLabel;
    private javax.swing.JLabel DatabaseNamejLabel;
    private javax.swing.JTextField DatabseNamejTextField;
    private javax.swing.JLabel PasswordjLabel;
    private javax.swing.JTextField PasswordjTextField;
    private javax.swing.JLabel PortjLabel;
    private javax.swing.JTextField PortjTextField;
    private javax.swing.JCheckBox SavePasswordjCheckBox;
    private javax.swing.JLabel ServerNamejLabel;
    private javax.swing.JTextField ServerNamejTextField;
    private javax.swing.JLabel UserNamejLabel;
    private javax.swing.JTextField UserNamejTextField;
    private javax.swing.JPanel UserjPanel;
    // End of variables declaration//GEN-END:variables
    Dialog dlg;

    public String getServerName() {
        return ServerNamejTextField.getText();
    }

    public int getPort() {
        return Integer.parseInt(PortjTextField.getText());
    }

    public String getDatabaseName() {
        return DatabseNamejTextField.getText();
    }

    public String getUserName() {
        return UserNamejTextField.getText();
    }

    public Boolean getSaveUserPassword() {
        return SavePasswordjCheckBox.isSelected();
    }

    public String getPassword() {
        return PasswordjTextField.getText();
    }

    public RoleTypes getConnectRole() {
        return (RoleTypes) ConnectAsjComboBox.getSelectedItem();
    }
    ActionListener listener = new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            if (e.getActionCommand().compareTo("Save") == 0) {
                OConnectionClass ocs = new OConnectionClass(getServerName(), getPort(), getDatabaseName(),
                        getUserName(), getPassword(), getSaveUserPassword(), getConnectRole());
                ocs.SaveConnection();
                ocs.SaveAllUsers();
                dlg.setVisible(false);
            }
        //throw new UnsupportedOperationException("Not supported yet." + e.getActionCommand());
        }
    };

    public void ShowDialog() {
        //OConnectionJPanel oc = new OConnectionJPanel();
        String[] str = {"Test", "Save", "Cancel", "Help"};
        DialogDescriptor d = new DialogDescriptor(this, "New Connection", true, str, null, DialogDescriptor.BOTTOM_ALIGN, HelpCtx.DEFAULT_HELP, listener);
        //d.setModal(true);
        //d.setMessageType(NotifyDescriptor.PLAIN_MESSAGE);
        //d.setOptionType(NotifyDescriptor.DEFAULT_OPTION);
        dlg = DialogDisplayer.getDefault().createDialog(d);
        dlg.pack();
        //dlg.setSize(new Dimension(800, 600));
        dlg.setVisible(true);
    }
}
